1.Tomcat的地址是192.168.1.124，端口是8888
2.修改地址和端口：
    2.1.修改文件application-dev.properties里的
            server.port = 8888
            server.address=192.168.1.124
    2.2.同时修改static/js/bootstrap/tab/bootstrap-tab.js里的一句代码
        $("#" + data[i].id).html("<iframe style='width: 100%;height:88%;boxder:none;'
            frameborder='no' border='0' marginwidth='0' marginheight='0' scrolling='yes' allowtransparency='yes'

            /**这句话限定的iframe的服务域，因此会造成跨域问题*/
            src='http://192.168.1.124:8888/"+data[i].url+"' >

        </iframe>");
3.部署在tomcat上，只需修改war包的名为hozon即可，tomcat下的lib添加jdbc驱动包
4.工程需要oracle数据库jdbc驱动，请手动添加
5.$.ajax({})的url需要添加打包名，否则找不到服务，因此需要用相对路径./而非绝对路径/

6.流程：
    流程终止之后，需要回到开始节点，需要重新发一遍
    先从界面上修改数据，存储在中间表中，自动填写到V/E/M表单中,表单中只填写变更的内容，其他数据要手填，填完之后才能发起流程,
    当前显示的是发布状态，可以查询草稿状态，审批不通过，返回原来的状态，审批通过之后将草稿状态变为发布状态，删除中间表数据

7.前端缓存对象
    //是一个jQuery对象
    var parent=$(but).parent();
    //jQuery对象jQuery获取方法data()方法
    var lineUid=parent.data("uid-coach");
    //jQuery对象jQuery获取方法attr()方法
    var lineUid2=parent.attr("data-uid-coach");
    //DOM对象传统获取方式 getAttribute
    var lineUid3=parent[0].getAttribute("data-uid-coach");
    //JS 通过dataset属性访问，需要注意的是，dataset中大小写的问题。带连字符连接的名称在使用的时候需要命名驼峰化。例如data-my-name对应的是dataset.myName的值
    var lineUid3=parent[0].dataset.uidCoach;

8.    //@Autowired是根据类型进行自动装配的，如果需要按名称进行装配，则需要配合@Qualifier
      //@Autowired 和 @Qualifier 结合使用时，自动注入的策略就从 byType 转变成 byName 了
      //@Autowired有个属性为required，可以配置为false，如果配置为false之后，当没有找到相应bean的时候，系统不会抛错。
      //@Inject是根据类型进行自动装配的，如果需要按名称进行装配，则需要配合@Named；
      //@Inject和 @Named结合使用时，自动注入的策略就从 byType 转变成 byName 了
      //    @Resource 一般会指定一个name属性
      //    1.Matches by Name
      //    2.Matches by Type
      //    3.Restricts by Qualifiers (ignored if match is found by name)
9.
@Repository注解可以标记在任何的类上，用来表明该类是用来执行与数据库相关的操作（即dao对象），
    并支持自动处理数据库操作产生的异常
@Component是一个通用的Spring容器管理的单例bean组件。
而@Repository, @Service, @Controller就是针对不同的使用场景所采取的特定功能化的注解组件。
因此，当你的一个类被@Component所注解，那么就意味着同样可以用@Repository, @Service, @Controller来替代它，同时这些注解会具备有更多的功能，而且功能各异。
如果你不知道要在项目的业务层采用@Service还是@Component注解。那么，@Service是一个更好的选择。

10.
@Service和@Repository放到实现类上面而不是接口类上面，接口只是一个规范，
需要各种实现类去实现这个接口，我们要用的就是这些实用类的方法。

11.ssl证书生成方法为
C:\Java\JDK8\bin>keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650

将在bin目录下生成keystore.p12的文件用于ssl，密码都是connor