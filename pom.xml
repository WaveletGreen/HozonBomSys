<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.connor.hozon</groupId>
    <artifactId>hozon</artifactId>
    <packaging>pom</packaging>

    <modules>
        <!--历史代码模块，这里的java类所在的包不要进行改动，该模块即为打包的war包模块，存放各种HTML、JS、css等各种静态资源模块-->
        <module>web</module>
        <!--dao层模块，只存放所有新增加的dao层interface，没有任何实现类，映射xml和POJO对象-->
        <module>dao</module>
        <!--service模块写具体的业务逻辑，包括调用dao层的增删改查等，如果update和insert方法发生异常会自动回滚-->
        <module>services</module>
        <!--controller模块只写controller，即暴露出来的REST URL，不允许有任何业务逻辑-->
        <module>controller</module>
        <!--自定义的通用工具类存放模块-->
        <module>common</module>
        <!--配置模块，暂时不需要增加配置-->
        <module>config</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <mysql.version>5.1.41</mysql.version>
        <guava.version>18.0</guava.version>
        <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>
        <!--pagehelper，分页查询助手-->
        <pagehelper.version>5.1.8</pagehelper.version>
        <!--druid-spring-boot-starter版本-->
        <druid-spring-boot-starter.version>1.1.3</druid-spring-boot-starter.version>
        <!--mybatis-spring-boot-starter版本-->
        <mybatis-spring-boot-starter.version>1.3.1</mybatis-spring-boot-starter.version>
        <!--javax.inject版本-->
        <javax.inject.version>1</javax.inject.version>
        <!--json-lib版本-->
        <json-lib.version>2.4</json-lib.version>
        <!--nekohtml版本-->
        <nekohtml.version>1.9.22</nekohtml.version>
        <!--spring-boot-starter-redis版本-->
        <spring-boot-starter-redis.version>1.3.8.RELEASE</spring-boot-starter-redis.version>
        <!--javax.servlet-api版本-->
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>

        <!--fastjson版本-->
        <fastjson.version>1.2.4</fastjson.version>

        <!--spring-boot-starter-tomcat版本-->
        <spring-boot-starter-tomcat.version>1.3.5.RELEASE</spring-boot-starter-tomcat.version>

        <!--commons-csv版本-->
        <commons-csv.version>1.3</commons-csv.version>

        <!--poi-ooxml版本-->
        <poi-ooxml.version>3.15-beta2</poi-ooxml.version>

        <hutool-all.version>3.0.9</hutool-all.version>
    </properties>


    <dependencies>

        <!-- 集成Druid数据库连接池和监控 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid-spring-boot-starter.version}</version>
        </dependency>

        <!-- 引入mybatis的支持 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis-spring-boot-starter.version}</version>
        </dependency>

        <!-- 引入mapstruct的支持 -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <!-- Java EE 6 规范 JSR 330 -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>

        <!-- 引入json的依赖 classifier必须要加这个是json的jdk的依赖 -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>${json-lib.version}</version>
            <classifier>jdk15</classifier>
        </dependency>


        <!--&lt;!&ndash; 开启spring-websocket的支持 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-websocket</artifactId>-->
        <!--</dependency>-->

        <!-- 开启spring-security的支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- 开启thymeleaf的spring-security的支持 -->
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>

        <!-- 表示对thymeleaf模板不再是用默认的HTML5标准来做严格限制 -->
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <version>${nekohtml.version}</version>
        </dependency>

        <!--&lt;!&ndash; 添加对spring-redis的支持 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-redis</artifactId>-->
            <!--<version>${spring-boot-starter-redis.version}</version>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; 添加对spring-cache的支持 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-cache</artifactId>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>net.sf.ehcache</groupId>-->
            <!--<artifactId>ehcache</artifactId>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; 添加对spring-data-rest的支持 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-data-rest</artifactId>-->
        <!--</dependency>-->

        <!-- 添加对spring-jpa的支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <!--<dependency>-->
            <!--<groupId>mysql</groupId>-->
            <!--<artifactId>mysql-connector-java</artifactId>-->
            <!--<version>${mysql.version}</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- 添加对thymeleaf的支持 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- 移除嵌入式tomcat插件 -->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>
        <!--alibaba json jar包-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring-boot-starter-tomcat.version}</version>
            <!--部署-->
            <!--<scope>provided</scope>-->
            <!--编译-->
            <scope>compile</scope>
        </dependency>

        <!-- ms office 文档处理 -->
        <!--<dependency>-->
        <!--<groupId>org.apache.poi</groupId>-->
        <!--<artifactId>poi</artifactId>-->
        <!--<version>3.13</version>-->
        <!--</dependency>-->

        <!-- csv 文档处理 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons-csv.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi-ooxml.version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>commons-fileupload</groupId>-->
        <!--<artifactId>commons-fileupload</artifactId>-->
        <!--<version>1.3.1</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>commons-io</groupId>-->
        <!--<artifactId>commons-io</artifactId>-->
        <!--<version>1.2</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional><!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖myboot项目的项目如果想要使用devtools，需要重新引入 -->
        </dependency>

        <dependency>
            <groupId>com.xiaoleilu</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool-all.version}</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.6.1</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.6.1</version>
        </dependency>
        <!--<dependency>-->
            <!--<groupId>com.vaadin.external.google</groupId>-->
            <!--<artifactId>android-json</artifactId>-->
            <!--<version>0.0.20131108.vaadin1</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>RELEASE</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <!--不想写getter和setter了，加上下面的依赖吧-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.2</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>
    </dependencies>
</project>
