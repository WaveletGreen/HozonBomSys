<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HzChangeDataRecordMapper">
  <resultMap id="BaseResultMap" type="sql.pojo.change.HzChangeDataRecord">
    <id column="ID" jdbcType="DOUBLE" property="id" />
    <result column="PUID" jdbcType="VARCHAR" property="puid" />
    <result column="APPLICANT_ID" jdbcType="DOUBLE" property="applicantId" />
    <result column="AUDITOR_ID" jdbcType="DOUBLE" property="auditorId" />
    <result column="ORDER_ID" jdbcType="DOUBLE" property="orderId" />
    <result column="TABLE_NAME" jdbcType="VARCHAR" property="tableName" />
    <result column="APPLICANT" jdbcType="VARCHAR" property="applicant" />
    <result column="AUDITOR" jdbcType="VARCHAR" property="auditor" />
    <result column="APPLICANT_TIME" jdbcType="TIMESTAMP" property="applicantTime" />
  </resultMap>


    <resultMap id="Puids_Map" type="java.lang.String">
        <result column="PUID" jdbcType="VARCHAR" property="puid" />
    </resultMap>
  <sql id="Base_Column_List">
    ID, PUID, APPLICANT_ID, AUDITOR_ID, ORDER_ID, TABLE_NAME
  </sql>


  <!--insert-->
  <insert id="HzChangeDataRecordDAOImpl_insert" parameterType="sql.pojo.change.HzChangeDataRecord">
    insert into HZ_CHANGE_DATA_RECORD (ID, PUID, APPLICANT_ID, 
      AUDITOR_ID, ORDER_ID, TABLE_NAME
      )
    values (SEQ_HZ_CHANGE_DATA_RECORD.nextval, #{puid,jdbcType=VARCHAR}, #{applicantId,jdbcType=DOUBLE},
      #{auditorId,jdbcType=DOUBLE}, #{orderId,jdbcType=DOUBLE}, #{tableName,jdbcType=VARCHAR}
      )
  </insert>


  <insert id="HzChangeDataRecordDAOImpl_insertList" parameterType="java.util.List">
    insert into HZ_CHANGE_DATA_RECORD (ID, PUID, APPLICANT_ID,
      AUDITOR_ID, ORDER_ID, TABLE_NAME
      )
    select SEQ_HZ_CHANGE_DATA_RECORD.nextval,t.* from
    (
    <foreach collection="list" item="item" index="index" separator="UNION ALL">
      select
      #{item.puid,jdbcType=VARCHAR},
      #{item.applicantId,jdbcType=DOUBLE},
      #{item.auditorId,jdbcType=DOUBLE},
      #{item.orderId,jdbcType=DOUBLE},
      #{item.tableName,jdbcType=VARCHAR}
      from DUAL
    </foreach>
    )t
  </insert>


  <insert id="insertSelective" parameterType="sql.pojo.change.HzChangeDataRecord">
    insert into HZ_CHANGE_DATA_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="puid != null">
        PUID,
      </if>
      <if test="applicantId != null">
        APPLICANT_ID,
      </if>
      <if test="auditorId != null">
        AUDITOR_ID,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="tableName != null">
        TABLE_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="puid != null">
        #{puid,jdbcType=VARCHAR},
      </if>
      <if test="applicantId != null">
        #{applicantId,jdbcType=DECIMAL},
      </if>
      <if test="auditorId != null">
        #{auditorId,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="tableName != null">
        #{tableName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <!--update-->
  <update id="updateByPrimaryKeySelective" parameterType="sql.pojo.change.HzChangeDataRecord">
    update HZ_CHANGE_DATA_RECORD
    <set>
      <if test="puid != null">
        PUID = #{puid,jdbcType=VARCHAR},
      </if>
      <if test="applicantId != null">
        APPLICANT_ID = #{applicantId,jdbcType=DECIMAL},
      </if>
      <if test="auditorId != null">
        AUDITOR_ID = #{auditorId,jdbcType=DECIMAL},
      </if>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="tableName != null">
        TABLE_NAME = #{tableName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <update id="updateByPrimaryKey" parameterType="sql.pojo.change.HzChangeDataRecord">
    update HZ_CHANGE_DATA_RECORD
    set PUID = #{puid,jdbcType=VARCHAR},
      APPLICANT_ID = #{applicantId,jdbcType=DECIMAL},
      AUDITOR_ID = #{auditorId,jdbcType=DECIMAL},
      ORDER_ID = #{orderId,jdbcType=DECIMAL},
      TABLE_NAME = #{tableName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>

  <!--delete-->
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
    delete from HZ_CHANGE_DATA_RECORD
    where ID = #{id,jdbcType=DECIMAL}
  </delete>

  <!--select-->
  <select id="HzChangeDataRecordDAOImpl_getChangeDataTableName" parameterType="com.connor.hozon.bom.resources.domain.query.HzChangeDataQuery" resultMap="BaseResultMap">
          SELECT
       DISTINCT(t.TABLE_NAME),
          T .ORDER_ID
      FROM
          HZ_CHANGE_DATA_RECORD T
      where t.ORDER_ID =#{orderId,jdbcType=DOUBLE}
  </select>

  <!--
       SELECT
       DISTINCT(t.TABLE_NAME),
           T .AUDITOR_ID,
          T .ORDER_ID ,
          T .APPLICANT_ID,
           t1.USER_NAME as auditor,
       t2.user_name as applicant,
       t3.applicant_time
      FROM
          HZ_CHANGE_DATA_RECORD T
       LEFT JOIN USERRECORD t1 ON T .AUDITOR_ID = T1.ID
       LEFT JOIN USERRECORD t2 on t.APPLICANT_ID = t2.id
       LEFT JOIN HZ_APPLICANT_CHANGE_RECORD t3 on t3.APPLICANT_ID = t.APPLICANT_ID
      where t.ORDER_ID =#{orderId,jdbcType=DOUBLE}
  -->
  <select id="HzChangeDataRecordDAOImpl_getChangeDataPuids" parameterType="java.util.HashMap" resultMap="Puids_Map">
      SELECT
          t.puid
      FROM
          HZ_CHANGE_DATA_RECORD T
      where t.ORDER_ID =#{orderId,jdbcType=DOUBLE}
      and t.TABLE_NAME =#{tableName,jdbcType=VARCHAR}
  </select>

  <delete id="HzChangeDataRecordDAOImpl_deleteByOrderIdAndTableName" parameterType="sql.pojo.change.HzChangeDataRecord">
      delete from HZ_CHANGE_DATA_RECORD t
      where
        t.TABLE_NAME = #{tableName,jdbcType=VARCHAR}
      and
        t.ORDER_ID = #{orderId,jdbcType=DOUBLE}
  </delete>
</mapper>